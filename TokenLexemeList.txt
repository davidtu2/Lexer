Lexeme: function            	Token: Keyword
Lexeme: calculateTriangle   	Token: Identifier
Lexeme: (                   	Token: Separator
Lexeme: base                	Token: Identifier
Lexeme: :                   	Token: Separator
Lexeme: real                	Token: Keyword
Lexeme: ,                   	Token: Separator
Lexeme: height              	Token: Identifier
Lexeme: :                   	Token: Separator
Lexeme: real                	Token: Keyword
Lexeme: )                   	Token: Separator
Lexeme: {                   	Token: Separator
Lexeme: area                	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: 0.5                 	Token: Real
Lexeme: *                   	Token: Operator
Lexeme: base                	Token: Identifier
Lexeme: *                   	Token: Operator
Lexeme: height              	Token: Identifier
Lexeme: ;                   	Token: Separator
Lexeme: printf              	Token: Keyword
Lexeme: (                   	Token: Separator
Lexeme: area                	Token: Identifier
Lexeme: )                   	Token: Separator
Lexeme: ;                   	Token: Separator
Lexeme: }                   	Token: Separator
Lexeme: function            	Token: Keyword
Lexeme: calculateRectangle  	Token: Identifier
Lexeme: (                   	Token: Separator
Lexeme: height              	Token: Identifier
Lexeme: :                   	Token: Separator
Lexeme: real                	Token: Keyword
Lexeme: ,                   	Token: Separator
Lexeme: width               	Token: Identifier
Lexeme: :                   	Token: Separator
Lexeme: real                	Token: Keyword
Lexeme: )                   	Token: Separator
Lexeme: {                   	Token: Separator
Lexeme: area                	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: width               	Token: Identifier
Lexeme: *                   	Token: Operator
Lexeme: height              	Token: Identifier
Lexeme: ;                   	Token: Separator
Lexeme: printf              	Token: Keyword
Lexeme: (                   	Token: Separator
Lexeme: area                	Token: Identifier
Lexeme: )                   	Token: Separator
Lexeme: ;                   	Token: Separator
Lexeme: }                   	Token: Separator
Lexeme: function            	Token: Keyword
Lexeme: calculateSquare     	Token: Identifier
Lexeme: (                   	Token: Separator
Lexeme: length              	Token: Identifier
Lexeme: :                   	Token: Separator
Lexeme: real                	Token: Keyword
Lexeme: )                   	Token: Separator
Lexeme: {                   	Token: Separator
Lexeme: area                	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: length              	Token: Identifier
Lexeme: *                   	Token: Operator
Lexeme: length              	Token: Identifier
Lexeme: ;                   	Token: Separator
Lexeme: printf              	Token: Keyword
Lexeme: (                   	Token: Separator
Lexeme: area                	Token: Identifier
Lexeme: )                   	Token: Separator
Lexeme: ;                   	Token: Separator
Lexeme: }                   	Token: Separator
Lexeme: function            	Token: Keyword
Lexeme: calculateCircle     	Token: Identifier
Lexeme: (                   	Token: Separator
Lexeme: radius              	Token: Identifier
Lexeme: :                   	Token: Separator
Lexeme: real                	Token: Keyword
Lexeme: )                   	Token: Separator
Lexeme: {                   	Token: Separator
Lexeme: area                	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: PI                  	Token: Identifier
Lexeme: *                   	Token: Operator
Lexeme: radius              	Token: Identifier
Lexeme: *                   	Token: Operator
Lexeme: radius              	Token: Identifier
Lexeme: ;                   	Token: Separator
Lexeme: printf              	Token: Keyword
Lexeme: (                   	Token: Separator
Lexeme: area                	Token: Identifier
Lexeme: )                   	Token: Separator
Lexeme: ;                   	Token: Separator
Lexeme: }                   	Token: Separator
Lexeme: $$                  	Token: Separator
Lexeme: real                	Token: Keyword
Lexeme: base                	Token: Identifier
Lexeme: ,                   	Token: Separator
Lexeme: height              	Token: Identifier
Lexeme: ,                   	Token: Separator
Lexeme: area                	Token: Identifier
Lexeme: ,                   	Token: Separator
Lexeme: width               	Token: Identifier
Lexeme: ,                   	Token: Separator
Lexeme: length              	Token: Identifier
Lexeme: ,                   	Token: Separator
Lexeme: PI                  	Token: Identifier
Lexeme: ,                   	Token: Separator
Lexeme: radius              	Token: Identifier
Lexeme: ;                   	Token: Separator
Lexeme: $$                  	Token: Separator
Lexeme: base                	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: 10                  	Token: Integer
Lexeme: ;                   	Token: Separator
Lexeme: height              	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: 15                  	Token: Integer
Lexeme: ;                   	Token: Separator
Lexeme: calculateTriangle   	Token: Identifier
Lexeme: (                   	Token: Separator
Lexeme: base                	Token: Identifier
Lexeme: ,                   	Token: Separator
Lexeme: height              	Token: Identifier
Lexeme: )                   	Token: Separator
Lexeme: ;                   	Token: Separator
Lexeme: height              	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: 15                  	Token: Integer
Lexeme: ;                   	Token: Separator
Lexeme: width               	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: 20                  	Token: Integer
Lexeme: ;                   	Token: Separator
Lexeme: calculateRectangle  	Token: Identifier
Lexeme: (                   	Token: Separator
Lexeme: height              	Token: Identifier
Lexeme: ,                   	Token: Separator
Lexeme: width               	Token: Identifier
Lexeme: )                   	Token: Separator
Lexeme: ;                   	Token: Separator
Lexeme: length              	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: 10                  	Token: Integer
Lexeme: ;                   	Token: Separator
Lexeme: calculateSquare     	Token: Identifier
Lexeme: (                   	Token: Separator
Lexeme: length              	Token: Identifier
Lexeme: )                   	Token: Separator
Lexeme: ;                   	Token: Separator
Lexeme: PI                  	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: 3.14                	Token: Real
Lexeme: ;                   	Token: Separator
Lexeme: radius              	Token: Identifier
Lexeme: =                   	Token: Operator
Lexeme: 4                   	Token: Integer
Lexeme: ;                   	Token: Separator
Lexeme: calculateCircle     	Token: Identifier
Lexeme: (                   	Token: Separator
Lexeme: radius              	Token: Identifier
Lexeme: )                   	Token: Separator
Lexeme: ;                   	Token: Separator
